<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="IBM-JS072F3" failures="1" tests="9" name="Surefire test" time="102.625" errors="0" timestamp="2024-11-08T14:38:10 IST">
  <testcase classname="TestComponents.BaseTest" name="@AfterMethod tearDown" time="-1.731056793245E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to https://testng.org/#_dependency_injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to https://testng.org/#_dependency_injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="TestComponents.BaseTest" name="@AfterMethod tearDown" time="-1.731056825272E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to https://testng.org/#_dependency_injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated tearDown.
For more information on native dependency injection please refer to https://testng.org/#_dependency_injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="AutomationProjects.SeleniumTestNG.ErrorValidationsTest" name="loginErrorValidation" time="0.387">
    <skipped/>
  </testcase> <!-- loginErrorValidation -->
  <testcase classname="AutomationProjects.SeleniumTestNG.ErrorValidationsTest" name="loginErrorValidation" time="0.767">
    <skipped/>
  </testcase> <!-- loginErrorValidation -->
  <testcase classname="AutomationProjects.SeleniumTestNG.ErrorValidationsTest" name="loginErrorValidation" time="0.408">
    <failure type="java.lang.AssertionError" message="expected [Incorrect email or password.] but found [Incorrect email  passwrd.]">
      <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  passwrd.]
at AutomationProjects.SeleniumTestNG.ErrorValidationsTest.loginErrorValidation(ErrorValidationsTest.java:23)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- loginErrorValidation -->
  <testcase classname="AutomationProjects.SeleniumTestNG.ErrorValidationsTest" name="productErrorValidation" time="0.0">
    <skipped/>
  </testcase> <!-- productErrorValidation -->
  <testcase classname="AutomationProjects.SeleniumTestNG.SubmitOrderTest" name="submitOrder" time="24.02"/>
  <testcase classname="AutomationProjects.SeleniumTestNG.SubmitOrderTest" name="submitOrder" time="0.0">
    <skipped/>
  </testcase> <!-- submitOrder -->
  <testcase classname="AutomationProjects.SeleniumTestNG.SubmitOrderTest" name="OrderHistoryTest" time="0.0">
    <skipped/>
  </testcase> <!-- OrderHistoryTest -->
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="30.741"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="29.87"/>
</testsuite> <!-- Surefire test -->
